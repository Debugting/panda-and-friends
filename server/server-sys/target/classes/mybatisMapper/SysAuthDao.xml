<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sysuser.dao.SysAuthDao">
    <resultMap id="BaseResultMap" type="com.example.sysuser.bean.SysAuth">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="parent_auth_id" jdbcType="INTEGER" property="parentAuthId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="href" jdbcType="VARCHAR" property="href"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="shows" jdbcType="INTEGER" property="shows"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from sys_auth
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteUnlinked">
        DELETE
        FROM sys_auth
        WHERE `parent_auth_id` NOT IN (SELECT id FROM (SELECT id FROM sys_auth) a)
          AND (parent_auth_id!=0 OR parent_auth_id!=NULL)
    </delete>
    <select id="queryByRole" resultMap="BaseResultMap">
        SELECT a.`id`,
               a.`parent_auth_id`,
               a.`name`,
               a.`sort`,
               a.`href`,
               a.`icon`,
               a.`shows`
        FROM `sys_auth` a,
             `sys_role_auth` ra,
             `sys_role` r
        WHERE a.`id` = ra.`sys_auth_id`
          AND ra.`sys_role_id` = r.`id`
          AND r.`id` = #{id}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               parent_auth_id,
               name,
               sort,
               href,
               icon,
               shows
        from sys_auth
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insertBatch">
        INSERT INTO `sys_role_auth` (
        `sys_auth_id`,
        `sys_role_id`
        )
        VALUES
        <foreach collection="auths" item="a" separator=",">
            (
            #{a},
            #{roleId}
            )
        </foreach>

    </insert>
    <select id="queryByUser" resultMap="BaseResultMap">
        SELECT a.`id`,
               a.`parent_auth_id`,
               a.`name`,
               a.`sort`,
               a.`href`,
               a.`icon`,
               a.`shows`
        FROM `sys_auth` a,
             `sys_role_auth` ra,
             `sys_role` sr,
             `sys_user_role` us
        WHERE a.`id` = ra.`sys_auth_id`
          AND ra.`sys_role_id` = sr.`id`
          AND sr.`id` = us.`sys_role_id`
          AND us.`sys_user_id` = #{value}
        order by a.sort asc
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, parent_auth_id, name, sort, href, icon, shows
        from sys_auth
        <where>
            <if test="id!=null ">and id = #{id,jdbcType=INTEGER}</if>
            <if test="parentAuthId!=null ">and parent_auth_id = #{parentAuthId,jdbcType=INTEGER}</if>
            <if test="name!=null and name!=''">and name = #{name,jdbcType=VARCHAR}</if>
            <if test="sort!=null ">and sort = #{sort,jdbcType=INTEGER}</if>
            <if test="href!=null and href!=''">and href = #{href,jdbcType=VARCHAR}</if>
            <if test="icon!=null and icon!=''">and icon = #{icon,jdbcType=VARCHAR}</if>
            <if test="shows!=null ">and shows = #{shows,jdbcType=INTEGER}</if>
        </where>
        <if test="orderByString!=null and orderByString!=''">
            ${orderByString}
        </if>
    </select>
    <select id="selectByCondition" resultMap="BaseResultMap">
        select
        id,parent_auth_id,name,sort,href,icon,shows
        from sys_auth
        <where>
            <if test="id!=null ">and id = #{id,jdbcType=INTEGER}</if>
            <if test="parentAuthId!=null ">and parent_auth_id = #{parentAuthId,jdbcType=INTEGER}</if>
            <if test="name!=null and name!=''">and name = #{name,jdbcType=VARCHAR}</if>
            <if test="sort!=null ">and sort = #{sort,jdbcType=INTEGER}</if>
            <if test="href!=null and href!=''">and href = #{href,jdbcType=VARCHAR}</if>
            <if test="icon!=null and icon!=''">and icon = #{icon,jdbcType=VARCHAR}</if>
            <if test="shows!=null ">and shows = #{shows,jdbcType=INTEGER}</if>
        </where>
        <if test="orderByString!=null and orderByString!=''">
            ${orderByString}
        </if>
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        insert into sys_auth (parent_auth_id, name, sort, href, icon, shows)
        values (#{parentAuthId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
                #{sort,jdbcType=INTEGER}, #{href,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
                #{shows,jdbcType=INTEGER})
    </insert>
    <update id="update">
        update sys_auth
        <set>
            <if test="parentAuthId!=null ">parent_auth_id = #{parentAuthId,jdbcType=INTEGER},</if>
            <if test="name!=null and name!=''">`name` = #{name,jdbcType=VARCHAR},</if>
            <if test="sort!=null ">sort = #{sort,jdbcType=INTEGER},</if>
            <if test="icon!=null and icon!=''">icon = #{icon,jdbcType=VARCHAR},</if>
            <if test="shows!=null ">shows = #{shows,jdbcType=INTEGER},</if>
            href = #{href,jdbcType=VARCHAR}
        </set>
        where id=#{id}
    </update>
</mapper>